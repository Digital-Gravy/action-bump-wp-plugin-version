# .github/workflows/test.yml
name: Test WordPress Plugin Version Bump Action
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create test plugin files
        run: |
          mkdir -p test
          # Create main test plugin file
          cat > test/plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Plugin URI: https://example.com/test-plugin
           * Description: A test plugin for version bumping
           * Version: 1.2.3
           * Author: Test Author
           * Author URI: https://example.com
           * License: GPL v2 or later
           * License URI: https://www.gnu.org/licenses/gpl-2.0.html
           * Text Domain: test-plugin
           * Domain Path: /languages
           */

          // Prevent direct access
          if (!defined('ABSPATH')) exit;
          EOF

          # Create backup of original file
          cp test/plugin.php test/plugin.php.bak

          # Create custom pattern test file
          cat > test/custom-plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Plugin URI: https://example.com/test-plugin
           * Description: A test plugin for version bumping
           * Plugin Version: 1.2.3
           * Author: Test Author
           * Author URI: https://example.com
           * License: GPL v2 or later
           * License URI: https://www.gnu.org/licenses/gpl-2.0.html
           * Text Domain: test-plugin
           * Domain Path: /languages
           */

          // Prevent direct access
          if (!defined('ABSPATH')) exit;
          EOF

      # Test patch release
      - name: Test patch release
        id: patch_release
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Stable
          version_bump: Patch

      - name: Verify patch release and version_bumped true
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+')
          echo "Found version: $version"
          [[ "$version" == "1.2.4" ]] || exit 1
          [[ "${{ steps.patch_release.outputs.version_bumped }}" == "true" ]] || exit 1

      # Test no version bump
      - name: Reset test file
        run: cp test/plugin.php{.bak,}

      - name: Test no version bump
        id: no_bump
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Stable
          version_bump: No version bump

      - name: Verify no version bump and version_bumped false
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+')
          echo "Found version: $version"
          [[ "$version" == "1.2.3" ]] || exit 1
          [[ "${{ steps.no_bump.outputs.version_bumped }}" == "false" ]] || exit 1

      # Test minor release
      - name: Reset test file
        run: cp test/plugin.php{.bak,}

      - name: Test minor release
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Stable
          version_bump: Minor

      - name: Verify minor release
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+')
          echo "Found version: $version"
          [[ "$version" == "1.3.0" ]] || exit 1

      # Test major release
      - name: Reset test file
        run: cp test/plugin.php{.bak,}

      - name: Test major release
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Stable
          version_bump: Major

      - name: Verify major release
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+')
          echo "Found version: $version"
          [[ "$version" == "2.0.0" ]] || exit 1

      # Test alpha release with patch
      - name: Reset test file for alpha release with patch
        run: |
          cat > test/plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Version: 1.2.3
           */
          EOF

      - name: Test alpha release with patch
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Alpha
          version_bump: Patch

      - name: Verify alpha release with patch
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+(?:-alpha-\d+)?')
          echo "Found version: $version"
          [[ "$version" == "1.2.4-alpha-1" ]] || exit 1

      # Test alpha increment
      - name: Reset test file for alpha increment
        run: |
          cat > test/plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Version: 1.2.3-alpha-1
           */
          EOF

      - name: Test alpha increment
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Alpha
          version_bump: No version bump

      - name: Verify alpha increment
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+(?:-alpha-\d+)?')
          echo "Found version: $version"
          [[ "$version" == "1.2.3-alpha-2" ]] || exit 1

      # Test alpha to beta transition
      - name: Reset test file for alpha to beta
        run: |
          cat > test/plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Version: 0.0.21-alpha-1
           */
          EOF

      - name: Test alpha to beta transition
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Beta
          version_bump: No version bump

      - name: Verify alpha to beta transition
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+(?:-beta-\d+)?')
          echo "Found version: $version"
          [[ "$version" == "0.0.21-beta-1" ]] || exit 1

      # Test beta to rc transition
      - name: Reset test file for beta to rc
        run: |
          cat > test/plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Version: 0.0.21-beta-1
           */
          EOF

      - name: Test beta to rc transition
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: RC
          version_bump: No version bump

      - name: Verify beta to rc transition
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+(?:-rc-\d+)?')
          echo "Found version: $version"
          [[ "$version" == "0.0.21-rc-1" ]] || exit 1

      # Test build release
      - name: Reset test file for build release
        run: |
          cat > test/plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Version: 1.2.3
           */
          EOF

      - name: Test build release
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Stable
          version_bump: Build

      - name: Verify build release
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+(?:\+[0-9]{14}-[0-9]+)?')
          echo "Found version: $version"
          [[ "$version" =~ 1\.2\.3\+[0-9]{14}-[0-9]+$ ]] || exit 1

      # Test build release with prerelease
      - name: Reset test file for build release with prerelease
        run: |
          cat > test/plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Version: 1.2.3-alpha-1
           */
          EOF

      - name: Test build release with prerelease
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Alpha
          version_bump: Build

      - name: Verify build release with prerelease
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+(?:-alpha-\d+)?(?:\+[0-9]{14}-[0-9]+)?')
          echo "Found version: $version"
          [[ "$version" =~ 1\.2\.3-alpha-1\+[0-9]{14}-[0-9]+$ ]] || exit 1

      # Test prerelease to stable
      - name: Reset test file for prerelease to stable
        run: |
          cat > test/plugin.php << 'EOF'
          <?php
          /**
           * Plugin Name: Test Plugin
           * Version: 0.0.21-alpha-1
           */
          EOF

      - name: Test prerelease to stable
        uses: ./
        with:
          plugin_file_path: test/plugin.php
          release_type: Stable
          version_bump: No version bump

      - name: Verify prerelease to stable
        run: |
          version=$(grep -e 'Version:' test/plugin.php | grep -oP 'Version:\s*\K\d+\.\d+\.\d+')
          echo "Found version: $version"
          [[ "$version" == "0.0.21" ]] || exit 1

      # Test custom version line pattern
      - name: Test custom version pattern
        uses: ./
        with:
          plugin_file_path: test/custom-plugin.php
          version_line_pattern: "Plugin Version:"
          release_type: Stable
          version_bump: Patch

      - name: Verify custom version pattern
        run: |
          version=$(grep -e 'Plugin Version:' test/custom-plugin.php | grep -oP 'Plugin Version:\s*\K\d+\.\d+\.\d+')
          echo "Found version: $version"
          [[ "$version" == "1.2.4" ]] || exit 1
